/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package diary;

import javax.swing.JOptionPane;

/**
 *
 * @author Julius
 */
public class DairyFrame extends javax.swing.JFrame {
    private Calendar dairy;
    private Appointment app;
    private int direction;
    private final static int BACK=0;
    private final static int RIGHT=1;
    private final static int DOWN=2;
    /**
     * Creates new form DairyFrame
     */
    public DairyFrame() {
        dairy=Diary.readApp();
        app=null;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        descT = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        search = new javax.swing.JButton();
        add = new javax.swing.JButton();
        monthC = new javax.swing.JComboBox();
        dayC = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        next = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        durT = new javax.swing.JTextField();
        previous = new javax.swing.JButton();
        monthT = new javax.swing.JTextField();
        dayT = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        descT.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setText("DESCRIPTION");

        search.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        search.setText("SEARCH");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        add.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        add.setText("ADD");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        monthC.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        monthC.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "***", "JAN", "FEB", "MAR", "ARP", "MAY", "JUN", "JUL", "AUG", "SEPT", "OCT", "NOV", "DEC" }));

        dayC.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        dayC.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "***", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30" }));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("MONTH");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("DAY");

        next.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        next.setText("NEXT");
        next.setEnabled(false);
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("DURATION");

        durT.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        previous.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        previous.setText("PREVIOUS");
        previous.setEnabled(false);

        monthT.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        dayT.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(durT, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(descT)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(monthC, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(monthT))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(previous)
                                .addGap(33, 33, 33)
                                .addComponent(next)
                                .addGap(76, 76, 76))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(dayT)
                                    .addComponent(dayC, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(39, 39, 39)
                                        .addComponent(search)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 196, Short.MAX_VALUE)
                                        .addComponent(add)
                                        .addGap(132, 132, 132))))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(monthC, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(dayC, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(add)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(monthT, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dayT, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(search, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(descT, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(durT, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(previous)
                        .addComponent(next)))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
        int day;
        String month;
        
        month=monthC.getSelectedItem().toString();
        day=Integer.parseInt(dayC.getSelectedItem().toString().equals("***") ? "0" : dayC.getSelectedItem().toString());
       
        next.setEnabled(false);
        if(!month.equals("***") && day>0){// gets the apps on this day of this month
            //to display the header of the apps on this day (back) then loop to view the remaining apps on this date
            app=dairy.getAppointment(month, day);
            direction=DairyFrame.BACK;
            if(app.back!=null) next.setEnabled(true);
            displayApp(app);
            //displayResults(app);
        }
        else if(day>0){//gets the apps on this day of every month
            app=dairy.getDayAppointment(day).right;
            direction=DairyFrame.RIGHT;
            if(app.back!=null) next.setEnabled(true);
            else if(app.right!=null) next.setEnabled(true);
            displayApp(app);// right comes in here bcos the app gotten here is the header app and not a real app
        }
        else if(!month.equals("***")){// gets the apps on this month
            app=dairy.getMonthAppointment(month).down;
            direction=DairyFrame.DOWN;
            if(app.back!=null) next.setEnabled(true);
            else if(app.down!=null) next.setEnabled(true);
            displayApp(app);
        }
        else{
            JOptionPane.showMessageDialog(null, "Please fill in either day or month to generate results","Error with searching...",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_searchActionPerformed
    
    private void displayResults(){ //displays the results of a query for apps
        Appointment temp;
       
        switch(direction){
            case BACK:
                if( (temp=app.back)!=null ){//if app has a back the loop
                next.setEnabled(true);
                displayApp(temp);
                app=temp;
            }
                else{
                    JOptionPane.showMessageDialog(null, "END OF RESULTS!!!");
                    next.setEnabled(false);
                    app=null;
                }
            break;
                
            case RIGHT:
                if( (temp=app.back)!=null ){//if app has a back the loop
                next.setEnabled(true);
                displayApp(temp);
                app=temp;
                }
                else if((temp=app.right)!=null ){
                next.setEnabled(true);
                displayApp(temp);
                app=temp;
            }
                else{
                    JOptionPane.showMessageDialog(null, "END OF RESULTS!!!");
                    next.setEnabled(false);
                    app=null;
                }
            break;
                
            case DOWN:
                if( (temp=app.back)!=null ){//if app has a back the loop
                next.setEnabled(true);
                displayApp(temp);
                app=temp;
                }
                else if((temp=app.down)!=null ){
                next.setEnabled(true);
                displayApp(temp);
                app=temp;
                }
                else{
                    JOptionPane.showMessageDialog(null, "END OF RESULTS!!!");
                    next.setEnabled(false);
                    app=null;
                }
                break;
    }
    }
    
    private void displayApp(Appointment app){// displays one app on the form
                dayT.setText(String.valueOf(app.getDay()));
                descT.setText(app.getDescription());
                durT.setText(String.valueOf(app.getDuration()));
                monthT.setText(app.getMonth());
    }
    
    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        int day;
        String month;
        int duration;
        String description;
        
        if(checkFields()){// then store
            
        month=monthC.getSelectedItem().toString();
        day=Integer.parseInt(dayC.getSelectedItem().toString());
        duration=Integer.parseInt(durT.getText());
        description= descT.getText();
        
        clearFields();
        dairy.addAppointment(month, day, description, duration);
        JOptionPane.showMessageDialog(null, "Successfully added to the Diary");
        Diary.storeApp(dairy);
        }
        else{
            JOptionPane.showMessageDialog(null, "Application not added.... Pls input in all the fields... ","Error with adding...",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addActionPerformed

    private boolean checkFields(){
        return !(monthC.getSelectedItem().toString().equals("***") || dayC.getSelectedItem().toString().equals("***") || descT.getText().equals("") || durT.getText().equals(""));
    } 
    
    private void clearFields(){
        monthC.setSelectedIndex(0);
        dayC.setSelectedIndex(0);
        descT.setText("");
        durT.setText("");
    }
    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        // TODO add your handling code here:
        //gets the app header gotten.. For this method to be called then the present app does have a back, down or right
        displayResults();
    }//GEN-LAST:event_nextActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DairyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DairyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DairyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DairyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DairyFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JComboBox dayC;
    private javax.swing.JTextField dayT;
    private javax.swing.JTextField descT;
    private javax.swing.JTextField durT;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JComboBox monthC;
    private javax.swing.JTextField monthT;
    private javax.swing.JButton next;
    private javax.swing.JButton previous;
    private javax.swing.JButton search;
    // End of variables declaration//GEN-END:variables
}
